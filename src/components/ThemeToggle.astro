---

---

<button
  aria-label="ダークモード切り替え"
  class="dark-mode-toggle"
  id="theme-toggle"
  title="ダークモード切り替え"
>
  <svg
    class="w-5 h-5 hidden dark:block"
    fill="none"
    id="sun-icon"
    stroke="currentColor"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"></path>
  </svg>
  <svg
    class="w-5 h-5 block dark:hidden"
    fill="none"
    id="moon-icon"
    stroke="currentColor"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"></path>
  </svg>
</button>

<script>
  function getThemePreference() {
    if (typeof localStorage !== 'undefined') {
      const theme = localStorage.getItem('theme');
      if (theme) {
        return theme;
      }
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  }

  function isDark() {
    return getThemePreference() === 'dark';
  }

  function updateTheme() {
    const theme = getThemePreference();
    const isDarkTheme = theme === 'dark';
    
    // Update document class
    document.documentElement.classList.toggle('dark', isDarkTheme);
    
    // Update localStorage
    if (typeof localStorage !== 'undefined') {
      localStorage.setItem('theme', theme);
    }
    
    // Update button icons
    const sunIcon = document.getElementById('sun-icon');
    const moonIcon = document.getElementById('moon-icon');
    if (sunIcon && moonIcon) {
      if (isDarkTheme) {
        sunIcon.classList.remove('hidden');
        sunIcon.classList.add('block');
        moonIcon.classList.remove('block');
        moonIcon.classList.add('hidden');
      } else {
        sunIcon.classList.remove('block');
        sunIcon.classList.add('hidden');
        moonIcon.classList.remove('hidden');
        moonIcon.classList.add('block');
      }
    }
  }

  function toggleTheme() {
    const currentTheme = getThemePreference();
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    if (typeof localStorage !== 'undefined') {
      localStorage.setItem('theme', newTheme);
    }
    
    updateTheme();
  }

  // Initialize theme on page load
  updateTheme();

  // Add event listener when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('theme-toggle');
    if (button) {
      button.addEventListener('click', toggleTheme);
    }
  });

  // Handle Astro page transitions
  document.addEventListener('astro:after-swap', () => {
    updateTheme();
    // Re-add event listener after page swap
    const button = document.getElementById('theme-toggle');
    if (button) {
      button.addEventListener('click', toggleTheme);
    }
  });
</script>
